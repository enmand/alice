# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from ingest.v1 import ingest_pb2 as ingest_dot_v1_dot_ingest__pb2


class IngestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ingest = channel.unary_unary(
                '/ingest.v1.IngestService/Ingest',
                request_serializer=ingest_dot_v1_dot_ingest__pb2.IngestRequest.SerializeToString,
                response_deserializer=ingest_dot_v1_dot_ingest__pb2.IngestResponse.FromString,
                _registered_method=True)
        self.AddEntity = channel.unary_unary(
                '/ingest.v1.IngestService/AddEntity',
                request_serializer=ingest_dot_v1_dot_ingest__pb2.AddEntityRequest.SerializeToString,
                response_deserializer=ingest_dot_v1_dot_ingest__pb2.AddEntityResponse.FromString,
                _registered_method=True)
        self.GetEntity = channel.unary_unary(
                '/ingest.v1.IngestService/GetEntity',
                request_serializer=ingest_dot_v1_dot_ingest__pb2.GetEntityRequest.SerializeToString,
                response_deserializer=ingest_dot_v1_dot_ingest__pb2.GetEntityResponse.FromString,
                _registered_method=True)
        self.UpdateEntity = channel.unary_unary(
                '/ingest.v1.IngestService/UpdateEntity',
                request_serializer=ingest_dot_v1_dot_ingest__pb2.UpdateEntityRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DeleteEntity = channel.unary_unary(
                '/ingest.v1.IngestService/DeleteEntity',
                request_serializer=ingest_dot_v1_dot_ingest__pb2.DeleteEntityRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class IngestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ingest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IngestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ingest': grpc.unary_unary_rpc_method_handler(
                    servicer.Ingest,
                    request_deserializer=ingest_dot_v1_dot_ingest__pb2.IngestRequest.FromString,
                    response_serializer=ingest_dot_v1_dot_ingest__pb2.IngestResponse.SerializeToString,
            ),
            'AddEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEntity,
                    request_deserializer=ingest_dot_v1_dot_ingest__pb2.AddEntityRequest.FromString,
                    response_serializer=ingest_dot_v1_dot_ingest__pb2.AddEntityResponse.SerializeToString,
            ),
            'GetEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntity,
                    request_deserializer=ingest_dot_v1_dot_ingest__pb2.GetEntityRequest.FromString,
                    response_serializer=ingest_dot_v1_dot_ingest__pb2.GetEntityResponse.SerializeToString,
            ),
            'UpdateEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEntity,
                    request_deserializer=ingest_dot_v1_dot_ingest__pb2.UpdateEntityRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEntity,
                    request_deserializer=ingest_dot_v1_dot_ingest__pb2.DeleteEntityRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ingest.v1.IngestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ingest.v1.IngestService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class IngestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ingest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ingest.v1.IngestService/Ingest',
            ingest_dot_v1_dot_ingest__pb2.IngestRequest.SerializeToString,
            ingest_dot_v1_dot_ingest__pb2.IngestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ingest.v1.IngestService/AddEntity',
            ingest_dot_v1_dot_ingest__pb2.AddEntityRequest.SerializeToString,
            ingest_dot_v1_dot_ingest__pb2.AddEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ingest.v1.IngestService/GetEntity',
            ingest_dot_v1_dot_ingest__pb2.GetEntityRequest.SerializeToString,
            ingest_dot_v1_dot_ingest__pb2.GetEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ingest.v1.IngestService/UpdateEntity',
            ingest_dot_v1_dot_ingest__pb2.UpdateEntityRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ingest.v1.IngestService/DeleteEntity',
            ingest_dot_v1_dot_ingest__pb2.DeleteEntityRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
